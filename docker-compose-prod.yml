######
##
# 1) start: docker-compose up -d <services>
# 2) continuously check logs: docker-compose logs -f
# 3) stop: docker-compose down
##
######
version: '2.3'

networks:
  anet:

services:

  ##
  # Main components and their dependencies
  ##
  # BEGIN: frontend
  frontend:
    image: node:9.2.0
    volumes:
      - ${PWD}/frontendserver:/opt/project/frontendserver
    ports:
      - 20001:9090
    networks:
      - anet
    working_dir: /opt/project/frontendserver
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=development
      - COOKIE_SECRET=bsiusussg78
      - BROKER_URL=http://broker:10010
      - LOGLEVEL=debug
    restart: unless-stopped
  # END: frontend

  # BEGIN: broker
  broker:
    image: node:10.9
    volumes:
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    ports:
      - 20002:10010
    networks:
      - anet
    working_dir: /opt/project/broker
    restart: unless-stopped
    healthcheck:
      test: curl 0.0.0.0:10010/ping
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=hfiauhdfnaln
      - STORAGE=mysql
      # - NLP=stupid
      - NLP=ctakes
      - CTAKESURL=http://ctakes-nlp:8080
      - MYSQL=mysql://autolinks:autolinks1@mysql:3306/autolinks?debug=false&connectionLimit=150&multipleStatements=true
      - LOGLEVEL=info
      - LOGBUFFER=false
      - WATCHIFYAPP=
    depends_on:
      mysql8:
        condition: service_healthy
  # END: broker

  # BEGIN: mysql
  mysql8:
    image: mysql:8.0
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=autolinks
      - MYSQL_USER=autolinks
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=autolinks1
    volumes:
      - ${PWD}/data/mysql8:/var/lib/mysql
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_bin", "--default-authentication-plugin=mysql_native_password", "--log_bin_trust_function_creators=1",  "--key-buffer-size=4294967296", "--max-connections=250" ]
    healthcheck:
      test: "/usr/bin/mysql -hlocalhost -pautolinks1 -uautolinks -Dautolinks -e'SELECT 1;'"
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      anet:
        aliases:
          - mysql
  # END: mysql

  # START: ctakes-nlp
  ctakes-nlp:
    build:
      context: ctakesnlp
      dockerfile: Dockerfile
    image: ctakes-nlp:latest
    networks:
      - anet
  # END: ctakes-nlp

  ##
  # Services and their dependencies
  ##
  # BEGIN: demo service
  demo:
    image: node:10.9
    volumes:
      - ${PWD}/services/demo:/opt/project/services/demo
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    networks:
      - anet
    working_dir: /opt/project/services/demo
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=ksuhfiuawhiufgb
      - BROKER_URL=http://broker:10010
    restart: unless-stopped
    depends_on:
      broker:
        condition: service_healthy
  # END: demo service

  # BEGIN: wikiservice
  wiki:
    image: node:10.9
    volumes:
      - ${PWD}/services/wikiservice/wikiservice-node:/opt/project/services/wikiservice/wikiservice-node
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    networks:
      - anet
    working_dir: /opt/project/services/wikiservice/wikiservice-node
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=98ydiaug9f7asjb
      - BROKER_URL=http://broker:10010
##      - ELASTICSEARCH_URLS=http://0.0.0.0:9200
##      - ELASTICSEARCH_URLS=http://elasticsearch:9200
      - ELASTICSEARCH_URLS=http://ltdocker.informatik.uni-hamburg.de:10004
      - ELASTICSEARCH_VERSION=5.5
##      - ELASTICSEARCH_INDICES=simplewiki
      - ELASTICSEARCH_INDICES=enwiki,wikidata,enwiktionary
    depends_on:
      broker:
        condition: service_healthy
  # END: wikiservice

  # BEGIN: elasticsearch index
#  es:
#    image: custom-elasticsearch:5.5.2
#    build:
#      context: services/wikiservice/es-docker
#      dockerfile: Dockerfile
##      args:
##        CUSTOM_UID: 39000
##        CUSTOM_GID: 390
#    environment:
#      - cluster.name=escluster
#      - bootstrap.memory_lock=true
#      - xpack.security.enabled=false
#      - http.host=0.0.0.0
#      - transport.host=0.0.0.0
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 131072
#        hard: 131072
#      nproc:
#        soft: 8192
#        hard: 8192
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - ${PWD}/data/es:/usr/share/elasticsearch/data
#    networks:
#      anet:
#        aliases:
#          - elasticsearch
#    healthcheck:
#      test: curl --silent --fail 'localhost:9200/_cluster/health' || exit 1
#      interval: 5s
#      timeout: 2s
#      retries: 12
  # END: elasticsearch index
