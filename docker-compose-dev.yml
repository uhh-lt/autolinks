######
##
# 1) start: docker-compose -f docker-compose-dev.yml up -d <services>
# 2) attach: docker attach ...
# 3) detach: detach with <CTRL-p> <CTRL-q>
# 4) stop: docker-compose -f docker-compose-dev.yml down
##
######
version: '2.3'

networks:
  anet:

volumes:
  node_modules:

services:

  ##
  # Main components and their dependencies
  ##
  # BEGIN: frontend
  frontend:
    image: node:9.2.0
    volumes:
      - ${PWD}/frontendserver:/opt/project/frontendserver
    ports:
      - 10001:9090
      - 3001:3001
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/frontendserver
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - COOKIE_SECRET=YOUR_COOKIE_SECRET
      - BROKER_URL=http://broker:10010
      - LOGLEVEL=debug
  # END: frontend

  # BEGIN: broker
  broker:
    image: remstef/node-swagger:10.5
    volumes:
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    ports:
      - 10000:10010
      - 3000:3001
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/broker
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - WATCHIFYAPP=TRUE
      - COOKIE_SECRET=YOUR_COOKIE_SECRET
      - STORAGE=mysql
      - NLP=stupid
      # - NLP=ctakes
      - CTAKESURL=http://ctakes-nlp:8080
      - MYSQL=mysql://autolinks:autolinks1@mysql8:3306/autolinks?debug=false&connectionLimit=100
      - LOGLEVEL=debug
  # END: broker

#  # BEGIN: mysql
#  mysql:
#    image: mysql:5.7
#    environment:
#      - MYSQL_RANDOM_ROOT_PASSWORD=yes
#      - MYSQL_DATABASE=autolinks
#      - MYSQL_USER=autolinks
#      - MYSQL_PORT=3306
#      - MYSQL_PASSWORD=autolinks1
#    volumes:
#      - ${PWD}/data/mysql:/var/lib/mysql
#    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_bin"]
#    healthcheck:
#      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-pautolinks1", "-uautolinks"]
#      interval: 20s
#      timeout: 10s
#      retries: 3
#    networks:
#      - anet
#  # END: mysql

  # BEGIN: mysql
  mysql8:
    image: mysql:8.0
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      # - MYSQL_ROOT_PASSWORD=toor
      - MYSQL_DATABASE=autolinks
      - MYSQL_USER=autolinks
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=autolinks1
    volumes:
      - ${PWD}/data/mysql8:/var/lib/mysql
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_bin", "--default-authentication-plugin=mysql_native_password", "--log_bin_trust_function_creators=1"]
    healthcheck:
      test: "/usr/bin/mysql -hlocalhost -pautolinks1 -uautolinks -Dautolinks -e'SELECT 1;'"
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - anet
  # END: mysql

  # START: ctakes-nlp
  ctakes-nlp:
    build:
      context: ctakesnlp
      dockerfile: Dockerfile
    image: ctakes-nlp:latest
    networks:
      - anet
  # END: ctakes-nlp

  ##
  # Services and their dependencies
  ##
  # BEGIN: demo service
  demo:
    image: remstef/node-swagger:10.5
    volumes:
      - ${PWD}/services/demo:/opt/project/services/demo
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    ports:
      - 10010:10010
      - 3010:3001
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/services/demo
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - COOKIE_SECRET=YOUR_COOKIE_SECRET
      - BROKER_URL=http://broker:10010
  # END: dummy service

  # BEGIN: wikiservice
  wiki:
    image: remstef/node-swagger:10.5
    volumes:
      - ${PWD}/services/wikiservice/wikiservice-node:/opt/project/services/wikiservice/wikiservice-node
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    ports:
      - 10011:10010
      - 3011:3001
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/services/wikiservice/wikiservice-node
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - LOGLEVEL=debug
      - COOKIE_SECRET=YOUR_COOKIE_SECRET
      - ELASTICSEARCH_URLS=http://localhost:9200
#      - ELASTICSEARCH_URLS=http://elasticsearch:9200
#      - ELASTICSEARCH_URLS=http://ltdocker.informatik.uni-hamburg.de:10004
      - ELASTICSEARCH_VERSION=5.5
#      - ELASTICSEARCH_INDICES=simplewiki
      - ELASTICSEARCH_INDICES=enwiki,wikidata,enwiktionary
  # END: wikiservice

  # BEGIN: demo service
  cooc:
    image: remstef/node-swagger:9.5
    volumes:
      - ${PWD}/services/cooc:/opt/project/services/cooc
      - ${PWD}/broker:/opt/project/broker
      - ${PWD}/data:/opt/project/data
    ports:
      - 10012:10010
      - 3012:3001
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/services/cooc
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - COOKIE_SECRET=YOUR_COOKIE_SECRET
      - BROKER_URL=http://broker:10010
  # END: dummy service

  # BEGIN: elasticsearch index
  es:
    image: custom-elasticsearch:5.5.2
    build:
      context: services/wikiservice/es-docker
      dockerfile: Dockerfile
#      args:
#        CUSTOM_UID: 39000
#        CUSTOM_GID: 390
    environment:
      - cluster.name=escluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 131072
        hard: 131072
      nproc:
        soft: 8192
        hard: 8192
    cap_add:
      - IPC_LOCK
    volumes:
      - ${PWD}/data/es:/usr/share/elasticsearch/data
      #- ${PWD}/services/wikiservice/es-docker/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      anet:
        aliases:
          - elasticsearch
    healthcheck:
      test: curl --silent --fail 'localhost:9200/_cluster/health' || exit 1
      interval: 5s
      timeout: 2s
      retries: 12

  kibana:
    image: docker.elastic.co/kibana/kibana:5.5.2
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - anet
    depends_on:
      es:
        condition: service_healthy
  # END: elasticsearch index
