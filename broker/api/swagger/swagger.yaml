swagger: '2.0'
info:
  version: '0.0.2'
  title: Autolinks Broker Service

## the domain of the service
#host: 127.0.0.1:10010
#
## array of all schemes that the API supports
#schemes:
#  # - https
#  - http
#
## will be prefixed to all paths (comment for no prefix)
#basePath: /

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

# define complex objects which can be references with $ref: "#/definitions/X"
definitions:

  # helper object to describe strings, arrays, or objects
  Any:
    description: 'Can be anything: string, number, array, object, etc.'

  # objects related for service maintenance
  Service:
    type: object
    properties:
      name:
        type: string
        description: the name of the service
      version:
        type: string
        description: the current version of the service
      location:
        type: string
        description: where to find the service
      description:
        type: string
        description: summray fo the service
      endpoints:
        type: array
        description: the endpoints a service offers
        items:
          $ref: '#/definitions/Endpoint'
          
  ServiceParameter:
    type: object
    properties:
      focus: 
        $ref: '#/definitions/DOffset'
      context:
        $ref: '#/definitions/Analysis'

  Endpoint:
    type: object
    properties:
      name:
        type: string
        description: the name of the endpoint
      method:
        type: string
        description: the name of the endpoint
      requireslogin:
        type: boolean
        description: does the service require a user to be logged in?
      requirements:
        description: A list of type requirements
        type: array
        items: 
          type: string

  # objects related to user management
  UserInfo:
    type: object
    properties:
      name:
        type: string
        description: the name of the user
      password:
        type: string
        description: the password of the user
      active:
        type: boolean
        description: is the user activated or deactivated
      registeredsince:
        type: integer
        description: the point in time when the user registered
      lastseenactive:
        type: integer
        description: the point in time when the user was last seen, i.e. the time of the last login
  
  # NLP related objects
  Analysis:
    type: object
    properties:
      text:
        type: string
      source:
        type: string
      lang:
        type: string
      annotations:
        type: array
        items:
          $ref: "#/definitions/Annotation"

  Annotation:
    type: object
    properties:
      type:
        type: string
      doffset:
        $ref: "#/definitions/DOffset"
      properties:
        type: object
      analyzer:
        type: string

  # Discontinuous offset, composed of a list of offsets to allow for discontinuous annotations
  DOffset:
    type: object
    properties:
      offsets:
        type: array
        items:
          $ref: "#/definitions/Offset"

  Offset:
    type: object
    properties:
      from:
        type: integer
      length:
        type: integer

  StorageInfo:
    type: object
    
  Resource:
    type: object
    properties:
      rid:
        type: integer
        description: the id of the resource, set to 0 if unknown
      cid:
        type: integer
        description: the id of the container resource, set to 0 if unknown
      metadata:
        type: object
        description: some metadata the resource, e.g. label
      value:
        $ref: '#/definitions/Any'
        
  # Resources:
  #   type: array
  #   items:
  #     $ref: "#/definitions/Resource"

  # in case of error return this object schema
  Exception:
    type: object
    properties:
      type:
        type: string
      message:
        type: string
      cause:
        type: string
      fields:
        type: object
        
securityDefinitions:
#  broker_auth:
#    type: "oauth2"
#    authorizationUrl: "/oauth/dialog"
#    flow: "implicit"
#    scopes:
#      write:data: "modify data in your account"
#      read:data: "read your data"
  # api_key:
  #   type: "apiKey"
  #   name: "api_key"
  #   in: "header"
  broker_auth:
    type: "basic"

tags:
  - name: Service
    description: Everything about connected services
  - name: User
    description: Everything about a user
  - name: NLP
    description: Everything about nlp
  - name: Storage
    description: Everything about reading and writing of user data
  - name: Maintenance
    description: Everything about the maintenance and availability of the vrok and writing of user data

paths:

  # here are service related endpoints
  /ping:
    x-swagger-router-controller: maintenance
    get:
      operationId: ping
      tags:
        - Maintenance
      summary: self check
      description: |
        returns 'OK' if fully functional, ERROR otherwise
      consumes: []
      produces:
        - text/plain
      parameters: []
      responses:
        200:
          description: single string with ok message
          schema:
            type: string
            default: 'OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Exception'

  /service/call:
    # tell nodejs where to find the code for this path
    x-swagger-router-controller: services
    post:
      operationId: call_service
      tags:
        - Service
      description: Call a service and get its response
      security:
        - broker_auth: []
      parameters:
        - name: data
          in: body
          description: The service + endpoint + parameter to be called
          schema:
            type: object
            properties:
              service:
                type: string
              version:
                type: string
              path:
                type: string
              method:
                type: string
              data:
                $ref: '#/definitions/ServiceParameter'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /service/details:
    x-swagger-router-controller: services
    post:
      operationId: get_service_details
      tags:
        - Service
      description: Get service details of a registered service
      parameters:
        - name: data
          in: body
          description: The name of the of the service
          schema:
            type: object
            properties:
              name:
                type: string
              version:
                type: string
              extended:
                type: boolean
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /service/registerService:
    # tell nodejs where to find the code for this path
    x-swagger-router-controller: services
    post:
      operationId: register_service
      tags:
        - Service
      description: Register a service
      parameters:
        - name: service
          in: body
          description: The service to be added
          schema:
            $ref: "#/definitions/Service"
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
            
  /service/deregisterService:
    x-swagger-router-controller: services
    post:
      operationId: deregister_service
      tags:
        - Service
      description: De-register a service, i.e. delete it from the broker
      parameters:
        - name: service
          in: body
          description: The name of the of the service to delete
          schema:
            type: object
            properties:
              name:
                type: string
              version:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /service/listServices:
    x-swagger-router-controller: services
    get:
      tags:
        - Service
      description: List registered services
      # used as the method name of the controller
      operationId: list_services
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /service/pingService:
    x-swagger-router-controller: services
    # ping given service
    post:
      operationId: ping_service
      tags:
        - Service
      description: Ping registered service
      parameters:
        - name: service
          in: body
          description: The name of the of the service to ping
          schema:
            type: object
            properties:
              name:
                type: string
              version:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
    # ping all services
    get:
      operationId: ping_services
      tags:
        - Service
      description: Ping registered services
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /nlp/findentities:
    x-swagger-router-controller: nlp
    post:
      operationId: find_named_entities
      tags:
        - NLP
      description: Find named entites in the provided text
      parameters:
        - name: data
          in: body
          description: |
            The analysis object which contains the current analysis object.
          schema:
            $ref: "#/definitions/Analysis"
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Annotation"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /nlp/analyze:
    x-swagger-router-controller: nlp
    post:
      operationId: analyze
      tags:
        - NLP
      description: Analyze the provided document
      parameters:
        - name: data
          in: body
          description: |
            The document object which contains the plain text and some
            configuration parameters, e.g. the desired language of analyis.
          schema:
            type: object
            properties:
              data: 
                type: string
              content-type:
                type: string
              source:
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Analysis"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /user/info:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      description: Get info about currently logged in user
      # used as the method name of the controller
      operationId: get_user_info
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
            
  /user/register:
    x-swagger-router-controller: users
    post:
      tags:
        - User
      description: Register a new user
      # used as the method name of the controller
      operationId: register_new_user
      parameters:
        - name: data
          in: body
          description: The definition of a new user account
          schema:
            type: object
            properties:
              name: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
            
  /user/delete:
    x-swagger-router-controller: users
    get:
      operationId: delete_user
      tags:
        - User
      description: Delete the currently logged in user
      security:
        - broker_auth: []
      responses:
        200:
          description: Success, returns 'OK' message
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
            
  /user/update:
    x-swagger-router-controller: users
    post:
      operationId: update_user
      tags:
        - User
      description: Update the currently logged in user
      security:
        - broker_auth: []
      parameters:
        - name: data
          in: body
          description: The definition of changes for the user
          schema:
            type: object
            properties:
              name: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /storage/editresource:
    x-swagger-router-controller: storage
    post:
      operationId: editresource
      tags:
        - Storage
      description: |
        Edit a resource. Specifically, provide an old resources and a new resource, the changes will be written.
        - Create a resource by setting the old resource parameter to null,
        - Remove a resource by setting the new resource parameter to null.
        - For editing, resources must have the same rid!

        NOTE that only one change at a time will be written, e.g. if you change the metadata object and the cid in the new resource only one of the changes will be processed.
        The new resource will be returned on success.
      parameters:
        - name: data
          in: body
          schema:
            type: object
            properties:
              before:
                $ref: "#/definitions/Resource"
              after:
                $ref: "#/definitions/Resource"
      security:
        - broker_auth: []
      responses:
        200:
          description: Success. Return the new resource. 
          schema:
            $ref: "#/definitions/Resource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
            
  /storage/document:
    x-swagger-router-controller: storage
    post:
      operationId: document_add
      tags:
        - Storage
      description: Add a document
      consumes:
        - multipart/form-data
      parameters:
        - name: data
          in: formData
          type: file
          required: true
      security:
        - broker_auth: []
      responses:
        200:
          description: single string with ok message
          schema:
            type: string
            default: 'OK'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
    delete:
      operationId: document_del
      tags:
        - Storage
      description: Removes a document
      security:
        - broker_auth: []
      responses:
        200:
          description: single string with ok message
          schema:
            type: string
            default: 'OK'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"
    get:
      operationId: document_get
      tags:
        - Storage
      description: Download a document
      security:
        - broker_auth: []
      responses:
        200:
          description: The file which was requested
          schema:
            type: file
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /storage/info:
    x-swagger-router-controller: storage
    get:
      tags:
        - Storage
      description: Get info about the storage of the currently logged in user
      # used as the method name of the controller
      operationId: info
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/StorageInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /swagger:
    x-swagger-pipe: swagger_raw
