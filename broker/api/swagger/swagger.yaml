swagger: '2.0'
info:
  version: '0.0.1'
  title: Autolinks Broker Service

## the domain of the service
#host: 127.0.0.1:10010
#
## array of all schemes that the API supports
#schemes:
#  # - https
#  - http
#
## will be prefixed to all paths (comment for no prefix)
#basePath: /

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

# define complex objects which can be references with $ref: "#/definitions/X"
definitions:

  Service:
    type: object
    properties:
      name:
        type: string
        description: the name of the service
      location:
        type: string
        description: where to find the service
      description:
        type: string
        description: summray fo the service
      endpoints:
        type: array
        description: the endpoints a service offers
        items:
          $ref: '#/definitions/Endpoint'

  Endpoint:
    type: object
    properties:
      name:
        type: string
        description: the name of the endpoint
      servicename:
        type: string
        description: the name of the service
      requireslogin:
        type: boolean
        description: does the service require a user to be logged in?

  User:
    type: object
    properties:
      name:
        type: string
        description: the name of the user
      password:
        type: string
        description: the password of the user
      active:
        type: boolean
        description: is the user activated or deactivated
      registeredsince:
        type: integer
        description: the point in time when the user registered
      lastseenactive:
        type: integer
        description: the point in time when the user was last seen, i.e. the time of the last login

  Error:
    type: object
    properties:
      message:
        type: string
      fields:
        type: string
        
securityDefinitions:
#  broker_auth:
#    type: "oauth2"
#    authorizationUrl: "/oauth/dialog"
#    flow: "implicit"
#    scopes:
#      write:data: "modify data in your account"
#      read:data: "read your data"
  # api_key:
  #   type: "apiKey"
  #   name: "api_key"
  #   in: "header"
  broker_auth:
    type: "basic"

tags:
  - name: Service
    description: Everything about connected services
  - name: User
    description: Everything about a user

paths:
  /userinfo:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      description: Get info about currently logged in user
      # used as the method name of the controller
      operationId: get_user_info
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /registerService:
    # tell nodejs where to find the code for this path
    x-swagger-router-controller: services
    post:
      operationId: register_service
      tags:
        - Service
      description: Register a service
      parameters:
        - name: service
          in: body
          description: The service to be added
          schema:
            $ref: "#/definitions/Service"
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
            
  /deregisterService:
    x-swagger-router-controller: services
    post:
      operationId: deregister_service
      tags:
        - Service
      description: De-register a service, i.e. delete it from the broker
      parameters:
        - name: service
          in: body
          description: The name of the of the service to delete
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /listServices:
    x-swagger-router-controller: services
    get:
      tags:
        - Service
      description: List registered services
      # used as the method name of the controller
      operationId: list_services
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /pingServices:
    x-swagger-router-controller: services
    get:
      operationId: ping_services
      tags:
        - Service
      description: Ping registered services
      responses:
        200:
          description: Success
        default:
          description: Error

  /pingService:
    x-swagger-router-controller: services
    post:
      operationId: ping_service
      tags:
        - Service
      description: Ping registered service
      parameters:
        - name: service
          in: body
          description: The name of the of the service to ping
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error


  /swagger:
    x-swagger-pipe: swagger_raw
