swagger: '2.0'
info:
  version: '0.0.1'
  title: Autolinks Broker Service

## the domain of the service
#host: 127.0.0.1:10010
#
## array of all schemes that the API supports
#schemes:
#  # - https
#  - http
#
## will be prefixed to all paths (comment for no prefix)
#basePath: /

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

# define complex objects which can be references with $ref: "#/definitions/X"
definitions:

  # objects related for service maintenance
  Service:
    type: object
    properties:
      name:
        type: string
        description: the name of the service
      version:
        type: string
        description: the current version of the service
      location:
        type: string
        description: where to find the service
      description:
        type: string
        description: summray fo the service
      endpoints:
        type: array
        description: the endpoints a service offers
        items:
          $ref: '#/definitions/Endpoint'

  Endpoint:
    type: object
    properties:
      name:
        type: string
        description: the name of the endpoint
      method:
        type: string
        description: the name of the endpoint
      requireslogin:
        type: boolean
        description: does the service require a user to be logged in?

  # objects related to user management
  UserInfo:
    type: object
    properties:
      name:
        type: string
        description: the name of the user
      password:
        type: string
        description: the password of the user
      active:
        type: boolean
        description: is the user activated or deactivated
      registeredsince:
        type: integer
        description: the point in time when the user registered
      lastseenactive:
        type: integer
        description: the point in time when the user was last seen, i.e. the time of the last login

#  NamedEntity:
#    type: object
#    properties:
#      text:
#        type: string
#      type:
#        type: string
#      offset:
#        $ref: "#/definitions/DOffset"
#      analyzer:
#        type: string

  # objects related to NLP
  Document:
    type: object
    properties:
      text:
        type: string
      source:
        type: string
      language:
        type: string

  Analysis:
    type: object
    properties:
      focusoffset:
        $ref: "#/definitions/DOffset"
      context:
        type: string
      source:
        type: string
      lang:
        type: string
      annotations:
        type: array
        items:
          $ref: "#/definitions/Annotation"

  Annotation:
    type: object
    properties:
      type:
        type: string
      offset:
        $ref: "#/definitions/DOffset"
      properties:
        type: object
      analyzer:
        type: string

  # Discontinuous offset, composed of a list of offsets to allow for discontinuous annotations
  DOffset:
    type: array
    items:
      $ref: "#/definitions/Offset"

  Offset:
    type: object
    properties:
      from:
        type: integer
      length:
        type: integer

  # objects related to storage
  StorageKVP:
    type: object
    properties:
      key:
        $ref: "#/definitions/StorageKey"
      value:
        $ref: "#/definitions/StorageValue"

  StorageKey:
    type: object
    properties:
      username:
        type: string
      servicename:
        type: string
      endpointname:
        type: string
      parameters:
        type: object

  StorageValue:
    type: object

  StorageInfo:
    type: object

  # in case of error return this object schema
  Error:
    type: object
    properties:
      message:
        type: string
      fields:
        type: string
        
securityDefinitions:
#  broker_auth:
#    type: "oauth2"
#    authorizationUrl: "/oauth/dialog"
#    flow: "implicit"
#    scopes:
#      write:data: "modify data in your account"
#      read:data: "read your data"
  # api_key:
  #   type: "apiKey"
  #   name: "api_key"
  #   in: "header"
  broker_auth:
    type: "basic"

tags:
  - name: Service
    description: Everything about connected services
  - name: User
    description: Everything about a user
  - name: NLP
    description: Everything about nlp
  - name: Storage
    description: Everything about reading and writing of user data
  - name: Maintenance
    description: Everything about the maintenance and availability of the vrok and writing of user data

paths:

  # here are service related endpoints
  /ping:
    x-swagger-router-controller: maintenance
    get:
      operationId: ping
      tags:
        - Maintenance
      summary: self check
      description: |
        returns 'OK' if fully functional, ERROR otherwise
      consumes: []
      produces:
        - text/plain
      parameters: []
      responses:
        200:
          description: single string with ok message
          schema:
            type: string
            default: 'OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /service/call:
    # tell nodejs where to find the code for this path
    x-swagger-router-controller: services
    post:
      operationId: call_service
      tags:
        - Service
      description: Call a service and get its response
      security:
        - broker_auth: []
      parameters:
        - name: data
          in: body
          description: The service + endpoint + parameter to be called
          schema:
            type: object
            properties:
              service:
                type: string
              path:
                type: string
              method:
                type: string
              data:
                type: object
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /service/details:
    x-swagger-router-controller: services
    post:
      operationId: get_service_details
      tags:
        - Service
      description: Get service details of a registered service
      parameters:
        - name: data
          in: body
          description: The name of the of the service
          schema:
            type: object
            properties:
              name:
                type: string
              extended:
                type: boolean
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /service/registerService:
    # tell nodejs where to find the code for this path
    x-swagger-router-controller: services
    post:
      operationId: register_service
      tags:
        - Service
      description: Register a service
      parameters:
        - name: service
          in: body
          description: The service to be added
          schema:
            $ref: "#/definitions/Service"
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
            
  /service/deregisterService:
    x-swagger-router-controller: services
    post:
      operationId: deregister_service
      tags:
        - Service
      description: De-register a service, i.e. delete it from the broker
      parameters:
        - name: service
          in: body
          description: The name of the of the service to delete
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /service/listServices:
    x-swagger-router-controller: services
    get:
      tags:
        - Service
      description: List registered services
      # used as the method name of the controller
      operationId: list_services
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /service/pingService:
    x-swagger-router-controller: services
    # ping given service
    post:
      operationId: ping_service
      tags:
        - Service
      description: Ping registered service
      parameters:
        - name: service
          in: body
          description: The name of the of the service to ping
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Success
        default:
          description: Error
    # ping all services
    get:
      operationId: ping_services
      tags:
        - Service
      description: Ping registered services
      responses:
        200:
          description: Success
        default:
          description: Error

  /nlp/findentities:
    x-swagger-router-controller: nlp
    post:
      operationId: find_named_entities
      tags:
        - NLP
      description: Find named entites in the provided text
      parameters:
        - name: analysis
          in: body
          description: |
            The analysis object which contains the current analysis object.
          schema:
            $ref: "#/definitions/Analysis"
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Annotation"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /nlp/analyze:
    x-swagger-router-controller: nlp
    post:
      operationId: analyze
      tags:
        - NLP
      description: Analyze the provided document
      parameters:
        - name: document
          in: body
          description: |
            The document object which contains the plain text and some
            configuration parameters, e.g. the desired language of analyis.
          schema:
            $ref: "#/definitions/Document"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Analysis"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /user/info:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      description: Get info about currently logged in user
      # used as the method name of the controller
      operationId: get_user_info
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
            
  /user/register:
    x-swagger-router-controller: users
    post:
      tags:
        - User
      description: Register a new user
      # used as the method name of the controller
      operationId: register_new_user
      parameters:
        - name: data
          in: body
          description: The definition of a new user account
          schema:
            type: object
            properties:
              name: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
            
  /user/delete:
    x-swagger-router-controller: users
    get:
      operationId: delete_user
      tags:
        - User
      description: Delete the currently logged in user
      security:
        - broker_auth: []
      responses:
        200:
          description: Success, returns 'OK' message
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
            
  /user/update:
    x-swagger-router-controller: users
    post:
      operationId: update_user
      tags:
        - User
      description: Update the currently logged in user
      security:
        - broker_auth: []
      parameters:
        - name: data
          in: body
          description: The definition of changes for the user
          schema:
            type: object
            properties:
              name: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /storage/read:
    x-swagger-router-controller: storage
    post:
      operationId: read
      tags:
        - Storage
        - User
      description: Get the data for a particular key
      parameters:
        - name: key
          in: body
          description: The key of the data to read
          schema:
            $ref: "#/definitions/StorageKey"
      security:
        - broker_auth: []
      responses:
        200:
          description: Success, user data was found and will be returned
        204:
          description: Success, no data not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /storage/write:
    x-swagger-router-controller: storage
    post:
      operationId: write
      tags:
        - Storage
        - User
      description: Write data for a particular key
      parameters:
        - name: kvp
          in: body
          description: The key and value of the data to be written
          schema:
            $ref: "#/definitions/StorageKVP"
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /storage/info:
    x-swagger-router-controller: storage
    get:
      tags:
        - Storage
        - User
      description: Get info about the storage of the currently logged in user
      # used as the method name of the controller
      operationId: info
      security:
        - broker_auth: []
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/StorageInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /swagger:
    x-swagger-pipe: swagger_raw
