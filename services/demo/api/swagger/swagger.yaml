##
#
# API description of autolinks demo service
#
##
swagger: '2.0'
info:
  version: '0.0.2'
  title: Demo
  description: |
    Autolinks Demo Service:
    This service is only here for demonstration
    and testing purposes

consumes:
  - application/json
produces:
  - application/json

definitions:

  # Objects used as parameters
  ServiceParameter:
    type: object
    properties:
      focus: 
        $ref: '#/definitions/DOffset'
      context:
        $ref: '#/definitions/Analysis'
        
  # NLP related objects
  Analysis:
    type: object
    properties:
      text:
        type: string
      source:
        type: string
      lang:
        type: string
      annotations:
        type: array
        items:
          $ref: "#/definitions/Annotation"

  Annotation:
    type: object
    properties:
      type:
        type: string
      doffset:
        $ref: "#/definitions/DOffset"
      properties:
        type: object
      analyzer:
        type: string

  # Discontinuous offset, composed of a list of offsets to allow for discontinuous annotations
  DOffset:
    type: object
    properties:
      offsets:
        type: array
        items:
          $ref: "#/definitions/Offset"

  Offset:
    type: object
    properties:
      from:
        type: integer
      length:
        type: integer

  # Objects related to required return types
  Triple:
    type: object
    properties:
      subject:
        type: object
        description: the subject of the triple is either a string or a triple
      predicate:
        type: object
        description: the predicate of the triple is either a string or a triple
      object:
        type: object
        description: the object of the triple is either a string or a triple
        
  Triples:
    type: array
    description: a list of triples
    items:
      $ref: '#/definitions/Triple'

  # in case of error return this object schema
  Exception:
    type: object
    properties:
      type:
        type: string
      message:
        type: string
      cause:
        type: string
      fields:
        type: object

tags:
  - name: Demo
    description: Everything about the service
  - name: Restricted
    description: Paths that require a username
  - name: Maintenance
    description: Everything about the service maintenance and its connection to the autolinks broker

paths:
  # here are the endpoints to what the service does
  /demo:
    x-swagger-router-controller: demo
    post:
      operationId: demo
      tags:
        - Demo
      description: | 
        Example of a service method
        requires: [ner]
      parameters:
        - name: data
          in: body
          description: The service parameter
          schema:
            $ref: '#/definitions/ServiceParameter'
        - name: getkey
          in: query
          description: Compute and only return storagekey based on the ServiceParameter
          type: boolean
          allowEmptyValue: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Triples'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /foo:
    x-swagger-router-controller: foobar
    post:
      operationId: foo
      tags:
        - Demo
        - Restricted
      description: Another example service method
      parameters:
        - name: data
          in: body
          description: The service parameter
          schema:
            $ref: '#/definitions/ServiceParameter'
        - name: getkey
          in: query
          description: Compute and only return storagekey based on the ServiceParameter
          type: boolean
          allowEmptyValue: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Triples'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /bar:
    x-swagger-router-controller: foobar
    get:
      operationId: bar
      tags:
        - Demo
        - Restricted
      description: A service that has no parameter and always returns the same data
      parameters:
        - name: getkey
          in: query
          description: Compute and only return storagekey
          type: boolean
          allowEmptyValue: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Triples'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  /baz/{username}:
    x-swagger-router-controller: foobar
    post:
      operationId: baz
      tags:
        - Demo
        - Restricted
      description: A service that needs a username (autorization needs to be done elsewhere)
      parameters:
        - name: username
          required: true
          in: path
          description: The username
          type: string
        - name: data
          in: body
          description: The service parameter
          schema:
            $ref: '#/definitions/ServiceParameter'
        - name: getkey
          in: query
          description: Compute and only return storagekey based on the ServiceParameter
          type: boolean
          allowEmptyValue: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Triples'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Exception"

  # here are service related endpoints
  /ping:
    x-swagger-router-controller: maintenance
    get:
      operationId: ping
      tags:
        - Maintenance
      summary: check availability
      description: |
        returns 'OK' if service is fully available or ERROR if service partly fails
      consumes: []
      produces:
        - text/plain
      parameters: []
      responses:
        200:
          description: single string with ok message if registered
          schema:
            type: string
            default: 'OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Exception'

  /service/registerAtBroker:
    x-swagger-router-controller: maintenance
    post:
      operationId: register_at_broker
      tags:
        - Maintenance
      summary: manually register this service and its endpoints at autolinks broker service
      description: |
        returns 'OK' if service was registered
      produces:
        - 'text/plain'
      parameters:
        - in: body
          name: data
          description: object holding the location
          schema:
            type: object
            properties:
              location:
                description: where to find the broker
                type: string
                default: 'http://BROKER_SERVER:BROKER_PORT/BROKER_BASE_PATH'
      responses:
        200:
          description: single string with ok message if registered
          schema:
            type: string
            default: 'OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Exception'
    get:
      operationId: register_at_system_broker
      tags:
        - Maintenance
      summary: Manually register this service and its endpoints at the provided autolinks broker service
      description: |
        returns 'OK' if service is fully available or ERROR if service partly fails
      consumes: []
      produces:
        - text/plain
      parameters: []
      responses:
        200:
          description: single string with ok message if registered
          schema:
            type: string
            default: 'OK'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Exception'

  /swagger:
    x-swagger-pipe: swagger_raw
