######
##
# 1) start: docker-compose up -d
# 2) attach: docker attach ...
# 3) detach: detach with <CTRL-p> <CTRL-q>
# 4) stop: docker-compose down
##
######
version: '2.3'

networks:
  anet:

services:

  ##
  # Main components and their dependencies
  ##
  # BEGIN: frontend
#  frontend:
#    image: node:9.2
#    volumes:
#      - ${PWD}/frontendserver:/opt/project
#    ports:
#      - 10000:10010
#      - 3000:3001
#    networks:
#      - anet
#    working_dir: /opt/project
#    environment:
#      - NODE_ENV=production
#      - COOKIE_SECRET=bsiusu78wbv
  # END: frontend

  # BEGIN: broker
  broker:
    image: node:9.3
    volumes:
      - ${PWD}/broker:/opt/project/broker
    ports:
      - 20000:10010
    networks:
      - anet
    working_dir: /opt/project/broker
    restart: unless-stopped
    healthcheck:
      test: curl 0.0.0.0:10010/ping
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=hfiauhdfnaln
      - STORAGE=mysql
      - MYSQL=mysql://autolinks:autolinks1@mysql:3306/autolinks?debug=false&connectionLimit=100
      - LOGLEVEL=info
    depends_on:
      mysql:
        condition: service_healthy
  # END: broker

  # BEGIN: mysql server
  mysql:
    image: "mysql:5.7"
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=autolinks
      - MYSQL_USER=autolinks
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=autolinks1
    volumes:
      - ${PWD}/broker-mysql-data:/var/lib/mysql
    command: ["--character-set-server=utf8", "--collation-server=utf8_bin"]
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-pautolinks1", "-uautolinks"]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - anet
  # END: mysql server

  ##
  # Services and their dependencies
  ##
  # BEGIN: dummy service
  dummy:
    image: node:9.3
    volumes:
      - ${PWD}/services/dummy:/opt/project/services/dummy
      - ${PWD}/broker:/opt/project/broker
#    ports:
#      - 20010:10010
    networks:
      - anet
    working_dir: /opt/project/services/dummy
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=ksuhfiuawhiufgb
      - BROKER_URL=http://broker:10010
    restart: unless-stopped
    depends_on:
      broker:
        condition: service_healthy
  # END: dummy service

  # BEGIN: wikiservice
  wiki:
    image: node:9.3
    volumes:
      - ${PWD}/services/wikiservice/wikiservice-node:/opt/project/services/wikiservice/wikiservice-node
      - ${PWD}/broker:/opt/project/broker
#    ports:
#      - 20011:10010
    networks:
      - anet
    stdin_open: true
    tty: true
    working_dir: /opt/project/services/wikiservice/wikiservice-node
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=98ydiaug9f7asjb
      - BROKER_URL=http://broker:10010
#      - ELASTICSEARCH_URLS=http://0.0.0.0:9200
#      - ELASTICSEARCH_URLS=http://elasticsearch:9200
      - ELASTICSEARCH_URLS=http://ltdocker.informatik.uni-hamburg.de:10004
      - ELASTICSEARCH_VERSION=5.5
#      - ELASTICSEARCH_INDICES=simplewiki
      - ELASTICSEARCH_INDICES=enwiki,wikidata,enwiktionary
    depends_on:
      broker:
        condition: service_healthy
  # END: wikiservice
