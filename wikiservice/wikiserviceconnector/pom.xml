<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.uhh.lt</groupId>
	<artifactId>wikiserviceconnector</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>autolinks - wikiserviceconnector</name>

  <properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<swagger-annotations-version>1.5.8</swagger-annotations-version>
		<jersey-version>2.22.2</jersey-version>
		<spring-boot-version>1.5.7.RELEASE</spring-boot-version>
		<jackson-version>2.8.9</jackson-version>
		<jodatime-version>2.7</jodatime-version>
		<junit-version>4.8.1</junit-version>
		<springfox-version>2.5.0</springfox-version>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<swaggerfile>src/main/resources/swagger-wikiserviceconnector.yaml</swaggerfile>
		<swaggerfile.ignore>src/main/resources/swagger.ignore</swaggerfile.ignore>
		<swagger-package>de.uhh.lt.autolinks.wikiservice.api</swagger-package>
		<elasticsearch.version>5.5.2</elasticsearch.version>
	</properties>

	<build>
		<plugins>
		
			<!-- set the compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- let swagger generate the sources -->
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.2.3</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<inputSpec>${swaggerfile}</inputSpec>
							<language>spring</language>
							<configOptions>
								<dateLibrary>joda</dateLibrary>
							</configOptions>
							<ignoreFileOverride>${swaggerfile.ignore}</ignoreFileOverride>
			                <apiPackage>${swagger-package}.handler</apiPackage>
			                <modelPackage>${swagger-package}.model</modelPackage>
			                <invokerPackage>${swagger-package}.handler</invokerPackage>
							<!-- <library>j8-async</library> -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- add the generated sources and resources to the compilation unit -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/swagger/src/main/java</source>
							</sources>
						</configuration>
					</execution>
          			<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
                 					<directory>${project.build.directory}/generated-sources/swagger/src/main/resources</directory>
                				</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		
	</build>


  <dependencyManagement>
       <dependencies>
          <dependency>
              <!-- Import dependency management from Spring Boot -->
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-dependencies</artifactId>
              <version>${spring-boot-version}</version>
              <type>pom</type>
              <scope>import</scope>
				<exclusions>
					<exclusion>
						<groupId>org.elasticsearch</groupId>
		  				<artifactId>elasticsearch</artifactId>
					</exclusion>
				</exclusions>
          </dependency>
      </dependencies>
  </dependencyManagement>



	<dependencies>


<!-- <dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-core</artifactId>
  <version>${spring-boot-version}</version>
  <exclusions>
    <exclusion>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </exclusion>
  </exclusions>
</dependency> -->

		<!-- dependencies are needed for the client being generated -->



		<!-- Security -->
<!-- 		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
			<version>${spring-boot-version}</version>
        </dependency> -->

		<!-- You can find the dependencies for the library configuation you chose
			by looking in JavaClientCodegen. Then find the corresponding dependency on
			Maven Central, and set the versions in the property section below -->

		<!-- HTTP client: jersey-client -->
		<!-- <dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey-version}</version>
		</dependency> -->

		<!-- JSON processing: jackson -->
		<!-- <dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-base</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-version}</version>
		</dependency> -->

    <!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.elasticsearch</groupId>
	  				<artifactId>elasticsearch</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

    <!-- Swagger -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations-version}</version>
    </dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox-version}</version>
    </dependency>

		<!-- Joda time: if you use it -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- elasticsearch -->
		<dependency>
		    <groupId>org.elasticsearch.client</groupId>
		    <artifactId>transport</artifactId>
			<version>${elasticsearch.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.elasticsearch</groupId>
	  				<artifactId>elasticsearch</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
	  		<groupId>org.elasticsearch</groupId>
	  		<artifactId>elasticsearch</artifactId>
	  		<version>${elasticsearch.version}</version>
        </dependency>
		
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <scope>test</scope>
		</dependency>

	</dependencies>

</project>
